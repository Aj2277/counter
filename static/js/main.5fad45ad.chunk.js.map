{"version":3,"sources":["components/count/Counter.js","components/layout/Header.js","components/AddTodo.js","components/TodoItem.js","components/Todos.js","App.js","serviceWorker.js","index.js"],"names":["Counter","state","num","increment","e","preventDefault","setState","decrement","className","this","onClick","Component","headerStyle","width","color","backgroundColor","textAlign","padding","borderTopLeftRadius","borderTopRightRadius","Header","style","AddTodo","title","onChange","target","name","value","onSubmit","props","addTodo","addStyle","type","placeholder","addBtnStyle","height","fontSize","border","background","TodoItem","getStyle","borderBottom","textDecoration","todo","completed","id","markComplete","bind","btnStyle","delItem","borderRadius","float","cursor","Todos","todos","map","key","App","randomNum","rand","Math","floor","random","console","log","parseInt","filter","newTodo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5fad45ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../../App.css';\r\n\r\nexport class Counter extends Component {\r\n  state = {\r\n    num: 0\r\n  }\r\n\r\n  increment = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ num: this.state.num +1 })\r\n  }\r\n\r\n  decrement = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ num: this.state.num -1 })\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n          <div className=\"counterBox\">\r\n            <p className=\"digits\">{this.state.num}</p>\r\n          </div>\r\n\r\n          <div className=\"buttons\">\r\n           <button onClick={this.increment}>+</button>\r\n           <button onClick={this.decrement}>-</button>\r\n          </div>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Counter\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>Todo List</h1>\r\n    </header>\r\n  )\r\n}\r\nconst headerStyle = {\r\n  width: '600px',\r\n  color: '#fff',\r\n  backgroundColor: '#0b6efd',\r\n  textAlign: 'center',\r\n  padding: '1px',\r\n  borderTopLeftRadius: '10px',\r\n  borderTopRightRadius: '10px'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component {\r\n  state = {\r\n    title: ''\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({ title: ''});\r\n  }\r\n\r\n  render() {    \r\n    return (\r\n      <form onSubmit={this.onSubmit} >\r\n        <input\r\n          style={addStyle}\r\n          type='text'\r\n          name='title'\r\n          placeholder='Add new Todo'\r\n          value={this.state.title}\r\n          onChange={this.onChange} />\r\n\r\n        <input\r\n          style={addBtnStyle}\r\n          type='submit'\r\n          value='Submit' />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst addStyle = {\r\n  width: '500px',\r\n  height: '35px',\r\n  fontSize: '16px'\r\n}\r\nconst addBtnStyle = {\r\n  width: '94px',\r\n  height: '40px',\r\n  border: 'none',\r\n  fontSize: '16px',\r\n  background: '#128842',\r\n  color: '#fff'\r\n}\r\n\r\nexport default AddTodo\r\n","import React, { Component } from 'react'\r\n\r\nexport class TodoItem extends Component {\r\n\r\n  getStyle = () => {\r\n    return {\r\n      background: '#f4f4f4',\r\n      padding: '1px',\r\n      borderBottom: '1px #ccc dotted',\r\n      width: '600px',\r\n      textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, title } = this.props.todo\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p>\r\n          <input type='checkbox' onChange={this.props.markComplete.bind(this, id)} />\r\n          {' '}\r\n          { title }\r\n          <button style={btnStyle} onClick={this.props.delItem.bind(this, id)} >x</button>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst btnStyle = {\r\n  backgroundColor: 'red',\r\n  color: 'white',\r\n  borderRadius: '5px',\r\n  float: 'right',\r\n  cursor: 'pointer'\r\n}\r\n\r\nexport default TodoItem\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nexport class Todos extends Component {\r\n  render() {    \r\n    return this.props.todos.map((todo) => (\r\n      <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delItem={this.props.delItem} />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default Todos\r\n","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport Counter from './components/count/Counter';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport Todos from './components/Todos';\n\n\nclass App extends Component {\n  state = {\n    todos: [\n      {\n        id: 1,\n        title: 'Call Lawyer',\n        completed: false \n      },\n      {\n        id: 2,\n        title: 'Find an Apartment',\n        completed: false \n      },\n      {\n        id: 3,\n        title: 'Call AmEx',\n        completed: false \n      }\n    ]\n  }\n\n\n  randomNum = () => {\n    let rand = '';\n\n    for (let num = 0; num < 10; num++) {\n      let num = Math.floor(Math.random() * 10);\n        rand += num\n        console.log(this.rand);\n        \n    }\n    return parseInt(rand)\n    \n  }\n\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    }) });\n    \n  }\n\n  delItem = (id) => {\n    this.setState({ todos: [...this.state.todos.filter(todo =>\n      todo.id !== id) ] })\n  }\n\n  addTodo = (title) => {\n    const newTodo = {\n      id: this.randomNum(),\n      title,\n      completed: false\n    }\n    this.setState({ todos: [...this.state.todos, newTodo] })\n    console.log(this.state.todos);\n    \n  }\n\n  render() {  \n    \n    return (    \n        <div className=\"App\">\n          \n          <Counter />\n            <p className=\"line\"></p>\n          <Header />\n          <AddTodo addTodo={this.addTodo} />\n          <Todos todos={this.state.todos} markComplete={this.markComplete} delItem={this.delItem} />\n\n        </div>\n      );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}